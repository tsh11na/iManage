# Generated by Django 2.0.5 on 2019-03-04 09:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CpuId',
            fields=[
                ('cpu_id', models.AutoField(primary_key=True, serialize=False, verbose_name='CPU')),
                ('cpu', models.CharField(max_length=100, unique=True, verbose_name='CPU')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
            },
        ),
        migrations.CreateModel(
            name='DriveId',
            fields=[
                ('drive_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ドライブID')),
                ('drive', models.CharField(max_length=100, unique=True, verbose_name='ドライブ')),
            ],
            options={
                'verbose_name': 'ドライブ',
                'verbose_name_plural': 'ドライブ',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('sam', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='SAM')),
                ('pc_or_display', models.CharField(choices=[('pc', 'PC'), ('display', 'ディスプレイ')], max_length=100, verbose_name='区分')),
                ('purchase', models.DateField(verbose_name='購入日')),
                ('warranty', models.DateField(verbose_name='保証期限')),
                ('note', models.TextField(blank=True, verbose_name='備考')),
            ],
            options={
                'verbose_name': '備品 (PC)',
                'verbose_name_plural': '備品 (PC)',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date', models.DateField(verbose_name='使用開始日')),
            ],
            options={
                'verbose_name': 'ログ',
                'verbose_name_plural': 'ログ ⚠基本的に使用しないこと⚠',
            },
        ),
        migrations.CreateModel(
            name='MemoryId',
            fields=[
                ('memory_id', models.AutoField(primary_key=True, serialize=False, verbose_name='メモリID')),
                ('memory', models.CharField(max_length=100, unique=True, verbose_name='メモリ')),
            ],
            options={
                'verbose_name': 'メモリ',
                'verbose_name_plural': 'メモリ',
            },
        ),
        migrations.CreateModel(
            name='ModelInfo',
            fields=[
                ('model_id', models.AutoField(primary_key=True, serialize=False, verbose_name='モデルID')),
                ('pc_or_display', models.CharField(choices=[('pc', 'PC'), ('display', 'ディスプレイ')], max_length=100, verbose_name='区分')),
                ('desk_or_lap', models.CharField(choices=[('desktop', 'デスクトップPC'), ('laptop', 'ノートPC')], max_length=100, null=True, verbose_name='種類')),
                ('model_name', models.CharField(max_length=100, verbose_name='モデル名')),
                ('maker', models.CharField(max_length=100, verbose_name='メーカー')),
                ('release_date', models.DateField(verbose_name='発売日')),
            ],
            options={
                'verbose_name': 'モデル',
                'verbose_name_plural': 'モデル',
            },
        ),
        migrations.CreateModel(
            name='OsId',
            fields=[
                ('os_id', models.AutoField(primary_key=True, serialize=False, verbose_name='OSID')),
                ('os', models.CharField(max_length=100, unique=True, verbose_name='OS')),
            ],
            options={
                'verbose_name': 'OS',
                'verbose_name_plural': 'OS',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False, verbose_name='利用者ID')),
                ('username', models.CharField(max_length=100, verbose_name='利用者名')),
                ('assigned_year', models.IntegerField(choices=[(2019, 2019), (2018, 2018), (2017, 2017), (2016, 2016), (2015, 2015), (2014, 2014), (2013, 2013), (2012, 2012), (2011, 2011), (2010, 2010), (2009, 2009), (2008, 2008), (2007, 2007), (2006, 2006)], default=2019, verbose_name='配属年度')),
                ('is_affiliated', models.BooleanField(default=True, verbose_name='現役？')),
            ],
            options={
                'verbose_name': '利用者',
                'verbose_name_plural': '利用者',
            },
        ),
        migrations.CreateModel(
            name='DisplayInfo',
            fields=[
                ('model_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='related_model_id', serialize=False, to='imapp.ModelInfo')),
                ('inch', models.FloatField(default=24.0, verbose_name='インチ')),
            ],
            options={
                'verbose_name': 'ディスプレイ情報',
                'verbose_name_plural': 'ディスプレイ情報',
            },
        ),
        migrations.CreateModel(
            name='PcEquipment',
            fields=[
                ('sam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='related_sam_id', serialize=False, to='imapp.Equipment')),
                ('cpu_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imapp.CpuId')),
                ('drive_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imapp.DriveId')),
                ('memory_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imapp.MemoryId')),
                ('os_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imapp.OsId')),
            ],
            options={
                'verbose_name': 'PC備品',
                'verbose_name_plural': 'PC備品',
            },
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('username', 'assigned_year')},
        ),
        migrations.AlterUniqueTogether(
            name='modelinfo',
            unique_together={('pc_or_display', 'model_name', 'maker', 'release_date')},
        ),
        migrations.AddField(
            model_name='log',
            name='sam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imapp.Equipment'),
        ),
        migrations.AddField(
            model_name='log',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imapp.User'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='model_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='imapp.ModelInfo'),
        ),
        migrations.CreateModel(
            name='EquipmentForDisplay',
            fields=[
            ],
            options={
                'verbose_name': '備品 (ディスプレイ)',
                'verbose_name_plural': '備品 (ディスプレイ)',
                'proxy': True,
                'indexes': [],
            },
            bases=('imapp.equipment',),
        ),
        migrations.CreateModel(
            name='EquipmentForPC',
            fields=[
            ],
            options={
                'verbose_name': '備品 (PC)',
                'verbose_name_plural': '備品 (PC)',
                'proxy': True,
                'indexes': [],
            },
            bases=('imapp.equipment',),
        ),
        migrations.CreateModel(
            name='Model_infoForDisplay',
            fields=[
            ],
            options={
                'verbose_name': 'モデル (ディスプレイ)',
                'verbose_name_plural': 'モデル (ディスプレイ)',
                'proxy': True,
                'indexes': [],
            },
            bases=('imapp.modelinfo',),
        ),
        migrations.CreateModel(
            name='Model_infoForPC',
            fields=[
            ],
            options={
                'verbose_name': 'モデル (PC)',
                'verbose_name_plural': 'モデル (PC)',
                'proxy': True,
                'indexes': [],
            },
            bases=('imapp.modelinfo',),
        ),
        migrations.AlterUniqueTogether(
            name='log',
            unique_together={('sam', 'begin_date', 'user_id')},
        ),
    ]
